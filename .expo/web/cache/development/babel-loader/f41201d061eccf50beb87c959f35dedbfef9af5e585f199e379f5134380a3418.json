{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Cardlivro(_ref) {\n  var livro = _ref.livro;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var handleBorrowPress = function handleBorrowPress() {\n    console.log('Livro emprestado:', livro.titulo);\n    setModalVisible(false);\n  };\n  return _jsxs(View, {\n    style: styles.bookContainer,\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return setModalVisible(true);\n      },\n      children: _jsx(Image, {\n        style: styles.bookImage,\n        source: {\n          uri: livro.capa.url\n        }\n      })\n    }), _jsxs(View, {\n      style: styles.bookInfo,\n      children: [_jsx(Text, {\n        style: styles.bookTitle,\n        children: livro.titulo\n      }), _jsx(Text, {\n        style: styles.bookAuthor,\n        children: livro.autor\n      })]\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        return setModalVisible(false);\n      },\n      children: _jsx(View, {\n        style: styles.modalContainer,\n        children: _jsxs(View, {\n          style: styles.modalContent,\n          children: [_jsx(Text, {\n            style: styles.modalTitle,\n            children: \"Detalhes do Livro\"\n          }), _jsx(Image, {\n            style: styles.modalImage,\n            source: {\n              uri: livro.capa.url\n            }\n          }), _jsx(Text, {\n            style: styles.modalBookTitle,\n            children: livro.titulo\n          }), _jsx(Text, {\n            style: styles.modalBookAuthor,\n            children: livro.autor\n          }), _jsx(TouchableOpacity, {\n            style: styles.borrowButton,\n            onPress: handleBorrowPress,\n            children: _jsx(Text, {\n              style: styles.borrowButtonText,\n              children: \"Emprestar\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.closeButton,\n            onPress: function onPress() {\n              return setModalVisible(false);\n            },\n            children: _jsx(Text, {\n              style: styles.closeButtonText,\n              children: \"Fechar\"\n            })\n          })]\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  borrowButton: {\n    backgroundColor: 'orange',\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  borrowButtonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  closeButton: {\n    backgroundColor: 'red',\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center'\n  },\n  closeButtonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});\nexport default Cardlivro;","map":{"version":3,"names":["React","useState","View","Image","StyleSheet","Text","TouchableOpacity","Modal","TextInput","jsx","_jsx","jsxs","_jsxs","Cardlivro","_ref","livro","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","handleBorrowPress","console","log","titulo","style","styles","bookContainer","children","onPress","bookImage","source","uri","capa","url","bookInfo","bookTitle","bookAuthor","autor","animationType","transparent","visible","onRequestClose","modalContainer","modalContent","modalTitle","modalImage","modalBookTitle","modalBookAuthor","borrowButton","borrowButtonText","closeButton","closeButtonText","create","backgroundColor","padding","borderRadius","alignItems","marginBottom","color","fontWeight"],"sources":["/home/thiago/Documentos/BibliotecaNueva/src/Cards/Cardlivro.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Image, StyleSheet, Text, TouchableOpacity, Modal, TextInput } from 'react-native';\n\nfunction Cardlivro({ livro }) {\n  const [modalVisible, setModalVisible] = useState(false);\n\n  const handleBorrowPress = () => {\n    // Adicione lógica para lidar com o empréstimo do livro aqui\n    // Por exemplo, você pode fazer uma chamada à API ou atualizar o estado local.\n    console.log('Livro emprestado:', livro.titulo);\n    // Feche o modal após o empréstimo\n    setModalVisible(false);\n  };\n\n  return (\n    <View style={styles.bookContainer}>\n      <TouchableOpacity onPress={() => setModalVisible(true)}>\n        <Image style={styles.bookImage} source={{ uri: livro.capa.url }} />\n      </TouchableOpacity>\n      <View style={styles.bookInfo}>\n        <Text style={styles.bookTitle}>{livro.titulo}</Text>\n        <Text style={styles.bookAuthor}>{livro.autor}</Text>\n        {/* Adicione mais informações se necessário */}\n      </View>\n\n      {/* Modal de Empréstimo */}\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => setModalVisible(false)}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>Detalhes do Livro</Text>\n            <Image style={styles.modalImage} source={{ uri: livro.capa.url }} />\n            <Text style={styles.modalBookTitle}>{livro.titulo}</Text>\n            <Text style={styles.modalBookAuthor}>{livro.autor}</Text>\n            {/* Adicione mais informações se necessário */}\n            <TouchableOpacity\n              style={styles.borrowButton}\n              onPress={handleBorrowPress}\n            >\n              <Text style={styles.borrowButtonText}>Emprestar</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={styles.closeButton}\n              onPress={() => setModalVisible(false)}\n            >\n              <Text style={styles.closeButtonText}>Fechar</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  // ... (seus estilos existentes)\n  borrowButton: {\n    backgroundColor: 'orange',\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  borrowButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  closeButton: {\n    backgroundColor: 'red',\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n  },\n  closeButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n});\n\nexport default Cardlivro;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}